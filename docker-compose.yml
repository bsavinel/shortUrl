services:
  client:
    container_name: client-stoik
    build: ./client
    env_file:
      - .env
    volumes:
      - ./client:/var/www
      - /var/www/node_modules
    restart: always
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    networks:
      - network

  server:
    container_name: nestjs-stoik
    image: nestjs-dev
    restart: unless-stopped
    build:
      context: ./server
      dockerfile: dev.Dockerfile
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "${PRISMA_STUDIO_PORT}:${PRISMA_STUDIO_PORT}"
    networks:
      - network
    depends_on:
      - postgres

  postgres:
    image: postgres:17.3
    container_name: postgres
    hostname: postgres
    networks:
      - network
    expose:
      - 5432
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  network:
    external: false

volumes:
  postgres_data: